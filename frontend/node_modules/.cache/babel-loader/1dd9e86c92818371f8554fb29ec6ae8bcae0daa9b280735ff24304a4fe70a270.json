{"ast":null,"code":"// api.js - helper for backend API calls with authentication\n\nconst API_BASE = process.env.REACT_APP_API_URL || 'https://apialchemistproject-backend-608187465720.us-central1.run.app';\n\n// Helper function to get auth headers\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('gcp_identity_token');\n  console.log('Token from localStorage:', token); // Debug log\n  console.log('All localStorage items:', Object.keys(localStorage)); // Debug log\n\n  return token ? {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  } : {\n    'Content-Type': 'application/json'\n  };\n};\n\n// Helper function to handle API responses with better error messages\nconst handleResponse = async response => {\n  if (!response.ok) {\n    let errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n    try {\n      const errorData = await response.json();\n      if (errorData.detail) {\n        errorMessage += ` - ${errorData.detail}`;\n      }\n    } catch (e) {\n      // Response might not be JSON\n    }\n    if (response.status === 401 || response.status === 403) {\n      errorMessage += ' - Please check your authentication token';\n      // Clear invalid token\n      localStorage.removeItem('gcp_identity_token');\n      localStorage.removeItem('user_email');\n    }\n    throw new Error(errorMessage);\n  }\n  return response.json();\n};\nexport async function fetchTodo() {\n  const res = await fetch(`${API_BASE}/todo`, {\n    headers: getAuthHeaders()\n  });\n  return handleResponse(res);\n}\nexport async function fetchNBA() {\n  const res = await fetch(`${API_BASE}/nba`, {\n    headers: getAuthHeaders()\n  });\n  return handleResponse(res);\n}\nexport async function draftMessage(data) {\n  const res = await fetch(`${API_BASE}/draft-message`, {\n    method: 'POST',\n    headers: getAuthHeaders(),\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\nexport async function createCalendarInvite(data) {\n  const res = await fetch(`${API_BASE}/calendar-invite`, {\n    method: 'POST',\n    headers: getAuthHeaders(),\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\nexport async function summarize(data) {\n  const res = await fetch(`${API_BASE}/summarize`, {\n    method: 'POST',\n    headers: getAuthHeaders(),\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\nexport async function ingestData(data) {\n  const res = await fetch(`${API_BASE}/ingest-data`, {\n    method: 'POST',\n    headers: getAuthHeaders(),\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\nexport async function fetchAggregation() {\n  const res = await fetch(`${API_BASE}/aggregation`, {\n    headers: getAuthHeaders()\n  });\n  return handleResponse(res);\n}\nexport async function chat(data) {\n  const res = await fetch(`${API_BASE}/chat`, {\n    method: 'POST',\n    headers: getAuthHeaders(),\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_URL","getAuthHeaders","token","localStorage","getItem","console","log","Object","keys","handleResponse","response","ok","errorMessage","status","statusText","errorData","json","detail","e","removeItem","Error","fetchTodo","res","fetch","headers","fetchNBA","draftMessage","data","method","body","JSON","stringify","createCalendarInvite","summarize","ingestData","fetchAggregation","chat"],"sources":["/home/prakashb/Prakash/project_hackathon/frontend/src/api.js"],"sourcesContent":["// api.js - helper for backend API calls with authentication\n\nconst API_BASE = process.env.REACT_APP_API_URL || 'https://apialchemistproject-backend-608187465720.us-central1.run.app';\n\n// Helper function to get auth headers\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('gcp_identity_token');\n  console.log('Token from localStorage:', token); // Debug log\n  console.log('All localStorage items:', Object.keys(localStorage)); // Debug log\n  \n  return token ? {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  } : {\n    'Content-Type': 'application/json'\n  };\n};\n\n// Helper function to handle API responses with better error messages\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    let errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n    \n    try {\n      const errorData = await response.json();\n      if (errorData.detail) {\n        errorMessage += ` - ${errorData.detail}`;\n      }\n    } catch (e) {\n      // Response might not be JSON\n    }\n    \n    if (response.status === 401 || response.status === 403) {\n      errorMessage += ' - Please check your authentication token';\n      // Clear invalid token\n      localStorage.removeItem('gcp_identity_token');\n      localStorage.removeItem('user_email');\n    }\n    \n    throw new Error(errorMessage);\n  }\n  return response.json();\n};\n\nexport async function fetchTodo() {\n  const res = await fetch(`${API_BASE}/todo`, {\n    headers: getAuthHeaders()\n  });\n  return handleResponse(res);\n}\n\nexport async function fetchNBA() {\n  const res = await fetch(`${API_BASE}/nba`, {\n    headers: getAuthHeaders()\n  });\n  return handleResponse(res);\n}\n\nexport async function draftMessage(data) {\n  const res = await fetch(`${API_BASE}/draft-message`, {\n    method: 'POST',\n    headers: getAuthHeaders(),\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\n\nexport async function createCalendarInvite(data) {\n  const res = await fetch(`${API_BASE}/calendar-invite`, {\n    method: 'POST',\n    headers: getAuthHeaders(),\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\n\nexport async function summarize(data) {\n  const res = await fetch(`${API_BASE}/summarize`, {\n    method: 'POST',\n    headers: getAuthHeaders(),\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\n\nexport async function ingestData(data) {\n  const res = await fetch(`${API_BASE}/ingest-data`, {\n    method: 'POST',\n    headers: getAuthHeaders(),\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\n\nexport async function fetchAggregation() {\n  const res = await fetch(`${API_BASE}/aggregation`, {\n    headers: getAuthHeaders()\n  });\n  return handleResponse(res);\n}\n\nexport async function chat(data) {\n  const res = await fetch(`${API_BASE}/chat`, {\n    method: 'POST',\n    headers: getAuthHeaders(),\n    body: JSON.stringify(data)\n  });\n  return handleResponse(res);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}